# pragma once

#ifndef INPUT_H
#define INPUT_H

#include "Globals.h"

// Making my own enum class makes it easier for when I want to switch out sfml for something else like GLFW
enum class Keys {
	A,
	B,
	C,
	D,
	E,
	F,
	G,
	h,
	I,
	J,
	K,
	L,
	M,
	N,
	O,
	P,
	Q,
	R,
	S,
	T,
	U,
	V,
	W,
	X,
	Y,
	Z,
    Num0,        
    Num1,        
    Num2,         
    Num3,         
    Num4,         
    Num5,        
    Num6,         
    Num7,         
    Num8,       
    Num9,         
    Escape,       
    LControl,    
    LShift,      
    LAlt,         
    LSystem,     
    RControl,     
    RShift,       
    RAlt,         
    RSystem,      
    Menu,        
    LBracket,    
    RBracket,     
    SemiColon,   
    Comma,        
    Period,      
    Quote,       
    Slash,       
    BackSlash,    
    Tilde,        
    Equal,        
    Dash,         
    Space,        
    Return,       
    BackSpace,    
    Tab,          
    PageUp,       
    PageDown,     
    End,         
    Home,         
    Insert,       
    Delete,       
    Add,         
    Subtract,     
    Multiply,     
    Divide,       
    Left,        
    Right,        
    Up,           
    Down,         
    Numpad0,      
    Numpad1,     
    Numpad2,      
    Numpad3,      
    Numpad4,      
    Numpad5,      
    Numpad6,     
    Numpad7,      
    Numpad8,      
    Numpad9,      
    F1,           
    F2,          
    F3,           
    F4,          
    F5,           
    F6,          
    F7,          
    F8,          
    F9,          
    F10,          
    F11,          
    F12,          
    F13,          
    F14,          
    F15,          
    Pause
};

enum class MouseButtons {
    Left,       
    Right,      
    Middle,
};

class GLN_API Input {
	static Input* instance;
public:
	bool isKeyPressed(Keys key);
	bool isMouseButtonPressed(MouseButtons button);
	glm::vec2 getMousePosition();
	static Input* getInstance();
};
#endif // !INPUT_H
